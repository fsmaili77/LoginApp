{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe0d2595.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\n\nclass UserStore {\n    constructor() {\n        extendObservable(this, {\n\n            \n        loading: true,\n        isLoggedIn: false,\n        username: ''\n        })\n\n    }\n}\nexport default new UserStore;","import React from 'react';\n\n\nclass InputField extends React.Component {\n  render(){\n\n  \n  return (\n    <div className=\"inputField\">\n      <input\n          className='input'\n          type={this.props.type}\n          placeholder={this.props.placeholder}\n          value={this.props.value}\n          onChange={ (e) => this.props.onChange(e.target.value) }\n      />\n     \n    </div>\n  );\n}\n}\n\nexport default InputField;\n","import React from 'react';\n\n\nclass SubmitButton extends React.Component {\n  render(){  \n    return (\n      <div className=\"submitButton\">\n        <button\n          className='btn'\n          disabled={ () => this.props.onClick() }\n        >\n          {this.props.text}\n\n        </button>\n      </div>\n    );\n}\n}\n\nexport default SubmitButton;\n","import React from 'react';\nimport InputField from './InputField';\nimport UserStore from './stores/UserStore';\nimport SubmitButton from './SubmitButton';\n\n\nclass LoginForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    }\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n    if (val.length > 12) {\n      return;\n    }\n    this.setState({\n      [property]: val\n    })\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    })\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true\n    })\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n      \n    }\n    catch(e) {\n     console.log(e);\n     this.resetForm();\n    \n    }\n  }\n\n  render(){  \n    return (\n        <div className=\"loginForm\">\n        Log in\n        <InputField \n          type= 'text'\n          placeholder= 'Username'\n          value={this.state.username ? this.state.username : ''}\n          onChange={ (val) => this.setInputValue('username', val) }\n        \n        />\n\n        <InputField \n          type= 'password'\n          placeholder= 'Password'\n          value={this.state.password ? this.state.password : ''}\n          onChange={ (val) => this.setInputValue('password', val) }\n        \n        />\n\n        <SubmitButton \n          text='Login'\n          disabled={this.state.buttonDisabled}\n          onClick={ () => this.doLogin() }\n        \n        />\n        </div>\n      );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    \n    }\n  }\n\n  async doLogout() {\n\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n      \n    }\n    catch(e) {\n     console.log(e)\n    \n    }\n  }\n  \n\n  render(){\n\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, please wait...\n\n          </div>\n        </div>\n      );\n    }\n    else {\n\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className='container'>\n              Welcome {UserStore.username}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout()}\n              \n              />  \n            </div>\n          </div>\n        ); \n      }\n      return (\n        <div className=\"app\">\n          <div className='container'>\n              <LoginForm />\n          </div>\n        </div>\n  );\n}\n    \n  \n  \n}\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}